
menu = """

[d] Depositar
[s] Sacar
[e] Extrato
[c] Criar Usuário
[a] Criar Conta
[l] Listar Contas
[q] Sair

=> """

saldo = 0
limite = 500
extrato = ""
numero_saques = 0
LIMITE_SAQUES = 3

usuarios = []  # Lista para armazenar usuários
contas = []  # Lista para armazenar contas
NUMERO_AGENCIA = "0001"
numero_conta = 1  # Contador de contas


def saque(*, saldo, valor, extrato, limite, numero_saques, limite_saques):
    """Função para realizar saque"""
    if valor > saldo:
        print("Operação falhou! Você não tem saldo suficiente.")
    elif valor > limite:
        print("Operação falhou! O valor do saque excede o limite.")
    elif numero_saques >= limite_saques:
        print("Operação falhou! Número máximo de saques excedido.")
    elif valor > 0:
        saldo -= valor
        extrato += f"Saque: R$ {valor:.2f}\n"
        numero_saques += 1
    else:
        print("Operação falhou! O valor informado é inválido.")

    return saldo, extrato


def deposito(saldo, valor, extrato, /):
    """Função para realizar depósito"""
    if valor > 0:
        saldo += valor
        extrato += f"Depósito: R$ {valor:.2f}\n"
    else:
        print("Operação falhou! O valor informado é inválido.")

    return saldo, extrato


def exibir_extrato(saldo, /, *, extrato):
    """Função para exibir o extrato"""
    print("\n================ EXTRATO ================")
    print("Não foram realizadas movimentações." if not extrato else extrato)
    print(f"\nSaldo: R$ {saldo:.2f}")
    print("==========================================")


def criar_usuario():
    """Função para criar um novo usuário"""
    cpf = input("Informe o CPF (somente números): ")
    if any(usuario["cpf"] == cpf for usuario in usuarios):
        print("Erro: CPF já cadastrado.")
        return

    nome = input("Informe o nome completo: ")
    data_nascimento = input("Informe a data de nascimento (DD/MM/AAAA): ")
    endereco = input("Informe o endereço (logradouro, nro - bairro - cidade/sigla estado): ")

    usuarios.append({"cpf": cpf, "nome": nome, "data_nascimento": data_nascimento, "endereco": endereco})
    print("Usuário criado com sucesso!")


def criar_conta():
    """Função para criar uma conta corrente vinculada a um usuário"""
    global numero_conta
    cpf = input("Informe o CPF do usuário: ")
    
    usuario = next((usuario for usuario in usuarios if usuario["cpf"] == cpf), None)
    if not usuario:
        print("Erro: Usuário não encontrado.")
        return

    contas.append({"agencia": NUMERO_AGENCIA, "numero_conta": numero_conta, "usuario": usuario["nome"]})
    print(f"Conta criada com sucesso! Agência: {NUMERO_AGENCIA}, Conta: {numero_conta}")
    numero_conta += 1


def listar_contas():
    """Função para listar todas as contas cadastradas"""
    if not contas:
        print("Nenhuma conta cadastrada.")
        return

    print("\n========== LISTA DE CONTAS ==========")
    for conta in contas:
        print(f"Agência: {conta['agencia']}, Conta: {conta['numero_conta']}, Titular: {conta['usuario']}")
    print("=====================================")


# Loop principal do menu
while True:
    opcao = input(menu)

    if opcao == "d":
        valor = float(input("Informe o valor do depósito: "))
        saldo, extrato = deposito(saldo, valor, extrato)

    elif opcao == "s":
        valor = float(input("Informe o valor do saque: "))
        saldo, extrato = saque(saldo=saldo, valor=valor, extrato=extrato, limite=limite, numero_saques=numero_saques, limite_saques=LIMITE_SAQUES)

    elif opcao == "e":
        exibir_extrato(saldo, extrato=extrato)

    elif opcao == "c":
        criar_usuario()

    elif opcao == "a":
        criar_conta()

    elif opcao == "l":
        listar_contas()

    elif opcao == "q":
        break

    else:
        print("Operação inválida, por favor selecione novamente a operação desejada.")
